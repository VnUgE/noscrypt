# https://taskfile.dev

#Called by the vnbuild system to produce builds for my website
#https://www.vaughnnugent.com/resources/software

#This taskfile performs the build operations for a module, it handles
#git code updates, msbuild on solutions, and sleet NuGet feed pushes.

#this file must be in the same directory as the solution file

#NOTES: Since CI project is pulled from the module root, MODULE_DIR is used instead of PROJECT_DIR

version: '3'

vars:
  END_USER_CMAKE_ARGS: '-DNC_BUILD_TESTS=OFF -DNC_DISABLE_INPUT_VALIDATION=OFF -DNC_INCLUDE_MONOCYPHER=ON'

tasks:

  default:
    desc: "Build the library for your system"
    deps:
     - install
    cmds:
     - task: build-local
       vars: { CMAKE_TEST_STATUS: 'OFF', BUILD_CONFIG: 'Release' }

  build-tests:
    desc: "Build libraries and test executable in debug mode"
    deps:
     - install
    cmds:
     - task: build-local
       vars: { CMAKE_TEST_STATUS: 'ON', BUILD_CONFIG: 'Debug' }

  build-local:
    internal: true
    cmds:
     - cmake -S . -Bbuild/ -DCMAKE_BUILD_TYPE={{.BUILD_CONFIG}} {{.END_USER_CMAKE_ARGS}}
     - cmake --build build/ --config {{.BUILD_CONFIG}}
     - cmd: echo "Build complete your files can be found in the build/ directory"
       silent: true

#CI ONLY!!

  #called by build pipeline to build module
  build:
    desc: "DO NOT RUN! CI Only"
    cmds:
     - echo "building project {{.PROJECT_NAME}}" 
     - cmd: powershell -Command "mkdir bin/ -Force"
       ignore_error: true
  
     #build windows x64
     - task: build_win_x64

     #pack source
     - task: pack_source

  clean:
    desc: "Cleans the artifact directory"
    ignore_error: true
    cmds:
    - for: [ bin/, build/, deps/]
      task: clean-internal
      vars: { FILE: '{{.ITEM}}'}


  clean-internal:
    internal: true
    ignore_error: true
    cmds:
     - cmd: rm -rf '{{.FILE}}'
       platforms: [linux, darwin]
       
     - cmd: powershell rm -Recurse '{{.FILE}}'
       platforms: [windows]

  build_win_x64:
    internal: true
    vars:
      TARGET_DLL: '{{.PROJECT_DIR}}/{{.BINARY_DIR}}/msvc-x64-release-{{.PROJECT_NAME}}.tgz'
      DLL_FILES: '{{.PROJECT_NAME}}.dll {{.PROJECT_NAME}}.lib license.txt'
      TARGET_STATIC: '{{.PROJECT_DIR}}/{{.BINARY_DIR}}/msvc-x64-release-{{.PROJECT_NAME}}-static.tgz'
      STATIC_FILES: '{{.PROJECT_NAME}}_static.lib license.txt'
      BUILD_DIR: 'out/build/win-x64'
    
    cmds:
      #invoke cmake build 
     - cmake -S . -B {{.BUILD_DIR}} -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
     - cmake --build {{.BUILD_DIR}} --config Release  
    
    #copy license to build dir
     - powershell -Command "cp license {{.BUILD_DIR}}/Release/license.txt"

    #tar up the binaries
     - cd {{.BUILD_DIR}}/Release &&  tar -czf "{{.TARGET_DLL}}" {{.DLL_FILES}}

    #tar up static libs
     - cd {{.BUILD_DIR}}/Release &&  tar -czf "{{.TARGET_STATIC}}" {{.STATIC_FILES}}


  pack_source:
    internal: true
    desc: "Packs up the project source code and creates a tarball in the builds binary directory"
    vars:
      TARGET_SOURCE: '{{.PROJECT_DIR}}/{{.BINARY_DIR}}/{{.PROJECT_NAME}}-source.tgz'
      SOURCE_FILES: 'CMakeLists.txt src include license tests Taskfile.yaml'

    cmds:
      #tar up the source
     - tar -czf "{{.TARGET_SOURCE}}" {{.SOURCE_FILES}}  
 
  